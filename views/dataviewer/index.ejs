<%- include('../partials/header') %>

<h1 class="display-5"><%= title %></h1>
<div class="mb-3">
  <p class="lead">View all data uploaded by users</p>
</div>  
<div id="rowFlex" class="mb-3"> 
  <div class="dropdown" id="buttonPadDataviewer">
    <form id="dataviewer-dropdown-form" action="/dataViewer" method="GET">
      <div class="input-group" id="searchDropdown" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">  
        <input type="text" class="form-control" id="dataviewer-search-bar" name="searchBar" placeholder="Quick Search">
      </div>
      <div class="dropdown-menu" id="dataviewer-dropdown-menu" aria-labelledby="searchDropdown">
        <!-- Dropdown options will be dynamically inserted here -->
      </div>
    </form>
  </div>

  <!-- Dropdown Menu -->
  <div class="dropdown" id="buttonPad">
    <button class="btn btn-secondary dropdown-toggle" type="button" id="searchDropdown" data-bs-toggle="dropdown" data-bs-target="#" aria-haspopup="true" aria-expanded="false">
      Order by
    </button>
    <div class="dropdown-menu" aria-labelledby="searchDropdown">
      <a class="dropdown-item" href="#">Default (Alphabetical)</a>
      <a class="dropdown-item" href="#">Taxonomy</a>
      <a class="dropdown-item" href="#">Conservation Status</a>
      <a class="dropdown-item" href="#">Invasiveness</a>
      <a class="dropdown-item" href="#">Industrial Usage</a>
      <a class="dropdown-item" href="#">Nutrition</a>
      <a class="dropdown-item" href="#">Toxicity</a>
      <!-- Dropdown items go here -->
    </div>
  </div>
</div>

<!-- To Show data -->
<div class="page-container">
  <div class="table-container">
    <% if (dataset && dataset.length > 0) { %>
      <table class="table table-striped table-hover">
        <thead>
          <tr>
            <th>Name</th>
            <th>Date Identified</th>
            <th>Location</th>
            <th>Map</th>
            <th>Image</th>
          </tr>
        </thead>
        <tbody>
          <% dataset.forEach(function(item) { %>
            <tr>
              <td class="col-2">
                <%= item.name %><br><i><%= item.binomialNomenclature %></i><br><br>
                <input type="radio" name="metadata" value="0" id="same-metadata"> <label for="same-metadata">Original metadata </label> <br>
                <input type="radio" name="metadata" value="1" id="changed-metadata"> <label for="changed-metadata">User modified metadata </label> <br>
                <input type="radio" name="metadata" value="default" id="default-metadata" checked> <label for="default-metadata">Default (Both) </label>
              </td>
              <td>
                <ul id="cellList">
                  <% if (item.updateDates && item.updateDates.length > 0) { %>
                    <% item.updateDates.forEach(function(updateDate, index) { %>
                      <li><%= updateDate %></li>
                    <% }); %>
                  <% } else { %>
                    <li>No date available</li>
                  <% } %>
                </ul>
              </td>
              <td>
                <div class="container">
                  <div class="coordinates" data-species="<%= JSON.stringify(item.locations) %>">
                    <ul id="cellList">
                      <% if (item.locations && item.locations.length > 0) { %>
                        <% item.locations.forEach(function(location, index) { %>
                          <li><%= location %></li>
                        <% }); %>
                      <% } else { %>
                        <li>No location available</li>
                      <% } %>
                    </ul>
                  </div>
                </div>
              </td>
              <td id="td5" class="map-container">
                <div class="map" style="height: 300px; width: 300px;"></div>
                <div class="gridCoordinates"></div>
                <div class="gridArea"></div>
                <div class="gridDensity"></div>
              </td>
              <td class="col-md-3">
                <% if (item.images && item.images.length > 0) { %>
                  <% if (item.images.length === 1) { %>
                    <img class="thumbnail w-75" src="/images/<%= item.kingdom.toLowerCase() %>_images/<%= item.images[0] %>" onclick="showImage(this)" />
                  <% } else { %>
                    <img class="thumbnail w-75" src="/images/<%= item.kingdom.toLowerCase() %>_images/<%= item.images[0] %>" onclick="showImage(this)" />
                    <span class="additional-images">+<%= item.images.length - 1 %> more</span>
                  <% } %>
                <% } %>
                <div class="overlay" onclick="hideImage()">
                  <span class="close" onclick="hideImage()">&times;</span>
                  <img class="enlarged-image" id="enlarged-image" />
                </div>
              </td>
            </tr>
          <% }); %>
        </tbody>
      </table>
  </div>
  <!-- Pagination -->
  <div class="pagination">
    <% if (currentPage > 1) { %>
      <a href="/dataViewer?page=1&searchBar=<%= searchQuery %>">&lt;&lt;</a>
      <a href="/dataViewer?page=<%= Math.max(currentPage - 10, 1) %>&searchBar=<%= searchQuery %>">&lt;</a>
    <% } %>

    <% const maxPagesToShow = 10; // Adjust this value based on your preference %>
    <% const startPage = Math.max(currentPage - Math.floor(maxPagesToShow / 2), 1); %>
    <% const endPage = Math.min(startPage + maxPagesToShow - 1, totalPages); %>

    <% for (let i = startPage; i <= endPage; i++) { %>
      <a href="/dataViewer?page=<%= i %>&searchBar=<%= searchQuery %>" class="<%= currentPage === i ? 'activePagination' : '' %>">
        <%= i %>
      </a>
    <% } %>

    <% if (currentPage < totalPages) { %>
      <a href="/dataViewer?page=<%= Math.min(currentPage + 10, totalPages) %>&searchBar=<%= searchQuery %>">&gt;</a>
      <a href="/dataViewer?page=<%= totalPages %>&searchBar=<%= searchQuery %>">&gt;&gt;</a>
    <% } %>
  </div>
  <% } else { %>
    <div class="flex-grid">
      <button class="grid-item plantae">Plantae</button>
      <button class="grid-item fungi">Fungi</button>
      <button class="grid-item animalia">Animalia</button>
      <button class="grid-item protista">Protista</button>
      <button class="grid-item bacteria">Bacteria</button>
      <div class="grid-item empty"></div>
  </div>
  <% } %>
</div>

<%- include('../partials/footer') %>

<script defer>
// Function to show phyla when Plantae button is clicked
function showPlantaePhyla() {
    // Clear the grid
    const grid = document.querySelector('.flex-grid');
    grid.innerHTML = ''; // Remove all existing buttons

    // Define phylum buttons for Plantae
    const phylumButtons = [
        { name: 'Angiosperms', className: 'plantae' },
        { name: 'Gymnosperms', className: 'plantae' },
        { name: 'Bryophytes', className: 'plantae' },
        { name: 'Pteridophytes', className: 'plantae' }
    ];

    // Create new buttons for each phylum
    phylumButtons.forEach(phylum => {
        const button = document.createElement('button');
        button.className = `grid-item ${phylum.className}`; // Add existing styles and class
        button.textContent = phylum.name;

        button.onclick = function() {
            // Optional: Add functionality for further clicks
            console.log(`${phylum.name} clicked!`);
        };

        grid.appendChild(button);
    });

    // Create and add Go Back button
    const goBackButton = document.createElement('button');
    goBackButton.className = 'grid-item'; // Maintain grid-item class for styling
    goBackButton.textContent = 'Go Back';
    
    goBackButton.onclick = function() {
        goBack();
    };

    grid.appendChild(goBackButton);
}

// Function to go back to the original buttons
function goBack() {
    const grid = document.querySelector('.flex-grid');
    grid.innerHTML = ''; // Clear the grid

    // Restore original buttons
    const originalButtons = [
        { name: 'Plantae', className: 'plantae' },
        { name: 'Fungi', className: 'fungi' },
        { name: 'Animalia', className: 'animalia' },
        { name: 'Protista', className: 'protista' },
        { name: 'Bacteria', className: 'bacteria' }
    ];

    originalButtons.forEach(kingdom => {
        const button = document.createElement('button');
        button.className = `grid-item ${kingdom.className}`; // Maintain classes for styling
        button.textContent = kingdom.name;

        // Bind the showPhylum function to each button
        button.onclick = function() {
            if (kingdom.name === 'Plantae') {
                showPlantaePhyla();
            } else {
                console.log(`${kingdom.name} button clicked!`); // Add any specific functionality as needed
            }
        };

        grid.appendChild(button);
    });
}

// Add event listener to the Plantae button
document.querySelector('.plantae').addEventListener('click', showPlantaePhyla);

</script>