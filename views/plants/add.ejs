<%- include('../partials/header') %>
<h1><%= title %></h1>

<!-- available to req.body object -->
<form method="POST" enctype="multipart/form-data">
  <!-- Input names have to match the name of the fields in the mongo schema object -->
  <fieldset class="form-group">
    <label for="image" class="col-2">Image:</label>
    <input type="file" name="image" id="image" class="form-control" accept=".jpg, .jpeg, .png" required onchange="identifyPlant()">
  </fieldset>
  <fieldset class="form-group">
    <label for="name" class="col-2">Name:</label>
    <input name="name" id="name" class="form-control" required/>
  </fieldset>
  <div id="scientificName"></div>
  <fieldset class="form-group">
    <label for="updateDate" class="col-2">Date Identified:</label>
    <input
      name="updateDate"
      id="updateDate"
      required
      class="form-control"
      placeholder="YYYY:MM:DD HH:mm:ss"
    />
  </fieldset>
  <fieldset class="form-group">
    <label for="location" class="col-2">Location:</label>
    <input name="location" id="location" class="form-control" placeholder="Latitude, Longitude (e.g., 45.0000, -45.0000)" required/>
  </fieldset>
  <!-- Display the selected location's coordinates -->
  <div id="coordinates"><span id="help">If unsure of coordinates - enter name of location, then copy map coordinates</span></div>
  <!-- Display the selected location's coordinates using Leaflet -->
  <div id="map" style="height: 300px;"></div>

  <!-- Button needs to be inside <form> element to trigger POST -->
  <button class="offset-3 btn btn-primary">Save</button>
</form>

<script defer>
  async function identifyPlant() {
      const image = document.getElementById('image');
      const images = image.files;
      const formData = new FormData();
    formData.append('image', images[0]);
      try {
          const apiUrl = 'http://localhost:3000/identify'; // Your server URL
          const response = await fetch(apiUrl, {
              method: 'POST',
              body: formData
          });

          // Check if the response has an error status
          if (!response.ok) {
              console.error('Error response status:', response.status);
              console.log('Error response text:', await response.text());
              return;
          }

          const data = await response.json();
          console.log('status', response.status); // should be: 200
          console.log('data', data);
          var plant = document.getElementById('scientificName');
          plant.innerHTML = data.bestMatch;

          var commonName = document.getElementById('name');

        if (data.firstMatch && data.firstMatch.species && data.firstMatch.species.commonNames && data.firstMatch.species.commonNames.length > 0) {
            commonName.innerHTML = `${data.firstMatch.species.commonNames[0]}`;

            // Set the value of the 'name' input to the common name
            commonName.value = data.firstMatch.species.commonNames[0];
        } else {
            commonName.innerHTML = 'No species information available.';
            commonName.value = ''; // Clear the input value if no common name is available
        }
      } catch (error) {
          console.error('error', error);
      }
  }
</script>

<%- include('../partials/footer') %>
